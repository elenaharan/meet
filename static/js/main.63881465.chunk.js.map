{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleOnClickButton","setState","prevState","event","this","props","className","summary","start","dateTime","location","Button","onClick","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numOfEvents","handleNumberChanged","updateEventCount","console","log","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentLocation","locationEvents","mounted","slice","eventCount","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mQAGMA,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,oBAAsB,WACpB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEH,WAAYG,EAAUH,e,4CAGxD,WAAU,IAAD,OACCI,EAAUC,KAAKC,MAAfF,MAER,OACE,sBAAKG,UAAU,UAAf,UACE,+BACE,oBAAIA,UAAU,gBAAd,SAA+BH,EAAMI,UACrC,oBAAID,UAAU,aAAd,SAA4BH,EAAMK,MAAMC,WACxC,oBAAIH,UAAU,iBAAd,SAAgCH,EAAMO,cAExC,cAACC,EAAA,EAAD,CAAQL,UAAU,WAAWM,QAASR,KAAKJ,oBAA3C,2BAG0B,IAAzBI,KAAKN,MAAMC,WACV,mBAAGO,UAAU,oBAAb,SAAkCH,EAAMU,eAEhB,IAAzBT,KAAKN,MAAMC,WACV,cAACY,EAAA,EAAD,CACEL,UAAU,WACVM,QAAS,kBAAM,EAAKZ,uBAFtB,iC,GA1BUc,aAsCLjB,ICtCTkB,E,4JACJ,WACE,IAAQC,EAAWZ,KAAKC,MAAhBW,OACR,OACE,oBAAIV,UAAU,YAAd,SACGU,EAAOC,KAAI,SAAAd,GAAK,OACf,oBAAmBG,UAAU,QAA7B,SACE,cAAC,EAAD,CAAOH,MAAOA,KADPA,EAAMe,a,GANDJ,aAeTC,IChBTI,E,4MACJrB,MAAQ,CACNsB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAACrB,GACpB,IAAMsB,EAAQtB,EAAMuB,OAAOD,MACrBJ,EAAc,EAAKhB,MAAMsB,UAAUC,QAAO,SAAClB,GAC/C,OAAOA,EAASmB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAK5B,SAAS,CACZmB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAK/B,SAAS,CACZmB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKjB,MAAM4B,aAAaD,I,4CAG1B,WAAU,IAAD,OACP,OACE,sBAAK1B,UAAU,aAAf,UACE,uBACE4B,KAAK,OACL5B,UAAU,OACVmB,MAAOrB,KAAKN,MAAMsB,MAClBe,SAAU/B,KAAKoB,mBACfY,QAAS,WAAQ,EAAKnC,SAAS,CAAEqB,iBAAiB,OAEpD,qBAAIhB,UAAU,cAAc+B,MAAOjC,KAAKN,MAAMwB,gBAAkB,GAAK,CAAEgB,QAAS,QAAhF,UACGlC,KAAKN,MAAMuB,YAAYJ,KAAI,SAACe,GAAD,OAC1B,oBAEEpB,QAAS,kBAAM,EAAKmB,kBAAkBC,IAFxC,SAIGA,GAHIA,MAMT,oBAAIpB,QAAS,kBAAM,EAAKmB,kBAAkB,QAA1C,SACE,2D,GA/CajB,aAuDVK,ICvDToB,E,4MACJzC,MAAQ,CACJ0C,YAAa,I,EAGjBC,oBAAsB,SAACtC,GACnB,IAAMsB,EAAQtB,EAAMuB,OAAOD,MAC3B,EAAKxB,SAAS,CACVuC,YAAaf,IAEjB,EAAKpB,MAAMqC,iBAAiBvC,EAAMuB,OAAOD,Q,4CAG7C,WAAU,IAAD,OAEP,OADEkB,QAAQC,IAAIxC,KAAKC,OAEf,qBAAKC,UAAU,iBAAf,SACI,uBAAO4B,KAAK,SAAS5B,UAAU,gBAAgBmB,MAAOrB,KAAKN,MAAM0C,YAAaL,SAAU,SAAChC,GAAD,OAAW,EAAKsC,oBAAoBtC,Y,GAjB3GW,aAyBdyB,I,iEC3BTM,EAAW,CACf,CACEC,KAAM,iBACNC,KAAM,qBACN7B,GAAI,8CACJ8B,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACT5C,QAAS,mBACTM,YACE,uWACFH,SAAU,aACV0C,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAER9C,MAAO,CACLC,SAAU,4BACV+C,SAAU,iBAEZC,IAAK,CACHhD,SAAU,4BACV+C,SAAU,iBAEZE,iBAAkB,6BAClBC,kBAAmB,CACjBlD,SAAU,4BACV+C,SAAU,iBAEZI,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,WAEb,CACElB,KAAM,iBACNC,KAAM,qBACN7B,GAAI,8CACJ8B,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACT5C,QAAS,eACTM,YACE,mSACFH,SAAU,kBACV0C,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAER9C,MAAO,CACLC,SAAU,4BACV+C,SAAU,iBAEZC,IAAK,CACHhD,SAAU,4BACV+C,SAAU,iBAEZE,iBAAkB,6BAClBC,kBAAmB,CACjBlD,SAAU,4BACV+C,SAAU,iBAEZI,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,YCxEFC,EAAmB,SAACjD,GAC/B,IAAIiD,EAAmBjD,EAAOC,KAAI,SAACd,GAAD,OAAWA,EAAMO,YAEnD,OADa,YAAO,IAAIwD,IAAID,KAIxBE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,MAAM,+DAAD,OACuCF,IAEhEG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALP,cACXG,EADW,yBAMVA,GANU,2CAAH,sDASHC,EAAS,uCAAG,kCAAAR,EAAA,yDACvBS,IAAUtE,SACNuE,OAAOrE,SAASsE,KAAKC,WAAW,oBAFb,uBAGrBH,IAAUI,OAHW,kBAIdrC,GAJc,uBAMHsC,IANG,YAMjBC,EANiB,gCAQrBC,IACMC,EAAS,+EATM,WAS4EF,GAT5E,UAUAG,IAAMC,IAAIF,GAVV,eAUfV,EAVe,QAWVa,OACL9D,EAAYsC,EAAiBW,EAAOa,KAAKzE,QAC7C0E,aAAaC,QAAQ,aAAcC,KAAKC,UAAUjB,EAAOa,OACzDC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUlE,KAEnDmD,IAAUI,OAhBW,kBAiBdN,EAAOa,KAAKzE,QAjBE,4CAAH,qDAuBTmE,EAAc,uCAAG,sCAAAd,EAAA,yDACtBD,EAAcsB,aAAaI,QAAQ,gBADb,KAET1B,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtB2B,EAFsB,KAIxB3B,IAAe2B,EAAWpB,MAJF,kCAKpBe,aAAaM,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBnB,OAAOrE,SAASyF,QAN/B,UAOPF,EAAaT,IAAI,QAPV,WAOpBY,EAPoB,yCAUFb,IAAMC,IAC1B,kFAXsB,eAUlBa,EAVkB,OAahBC,EAAYD,EAAQZ,KAApBa,QAbgB,kBAchBvB,OAAOrE,SAASsE,KAAOsB,GAdP,iCAgBnBF,GAAQG,EAASH,IAhBE,iCAkBrBhC,GAlBqB,4CAAH,qDAqBrBiB,EAAc,WAClB,GAAIN,OAAOyB,QAAQC,WAAa1B,OAAOrE,SAASgG,SAAU,CACxD,IAAIC,EAAS5B,OAAOrE,SAASkG,SAAW,KACtC7B,OAAOrE,SAASmG,KAChB9B,OAAOrE,SAASgG,SAClB3B,OAAOyB,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAAS5B,OAAOrE,SAASkG,SAAW,KAAO7B,OAAOrE,SAASmG,KAC3D9B,OAAOyB,QAAQC,UAAU,GAAI,GAAIE,IAI/BJ,EAAQ,uCAAG,WAAOH,GAAP,mBAAA/B,EAAA,6DACTyC,EAAaC,mBAAmBX,GADvB,SAEgB9B,MAC5B,0EADiC,WAC4CwC,IAC/EvC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KAPH,wBAEPqC,EAFO,EAEPA,eAOQtB,aAAaC,QAAQ,eAAgBqB,GATtC,kBAWRA,GAXQ,2CAAH,sDCvERC,G,kNACJnH,MAAQ,CACNkB,OAAQ,GACRW,UAAW,GACXa,YAAa,GACb0E,gBAAiB,O,EAmBnBjF,aAAe,SAACvB,GACdmE,IAAYN,MAAK,SAACvD,GAChB,IAAMmG,EAA+B,QAAbzG,EACtBM,EACAA,EAAOY,QAAO,SAACzB,GAAD,OAAWA,EAAMO,WAAaA,KACtC8B,EAAgB,EAAK1C,MAArB0C,YACJ,EAAK4E,SACP,EAAKnH,SAAS,CACZe,OAAQmG,EAAeE,MAAM,EAAG7E,S,EAQxCE,iBAAmB,SAAC4E,GAClB,IAAQJ,EAAmB,EAAKpH,MAAxBoH,gBACR,EAAKjH,SAAS,CACZuC,YAAa8E,IAEf,EAAKrF,aAAaiF,EAAiBI,I,uDAlCrC,WAAqB,IAAD,OAClBlH,KAAKgH,SAAU,EACfvC,IAAYN,MAAK,SAACvD,GACZ,EAAKoG,SACP,EAAKnH,SAAS,CACZe,OAAQA,EAAOqG,MAAM,EAAG,EAAKvH,MAAM0C,aACnCb,UAAWsC,EAAiBjD,U,kCAiCpC,WACEZ,KAAKgH,SAAU,I,oBAGjB,WAGE,OACE,sBAAK9G,UAAU,MAAf,UACE,cAAC,EAAD,CAAYqB,UAAWvB,KAAKN,MAAM6B,UAAWM,aAAc7B,KAAK6B,eAChE,cAAC,EAAD,CAAgBO,YAAapC,KAAKN,MAAM0C,YAAaE,iBAAkBtC,KAAKsC,mBAC5E,cAAC,EAAD,CAAW1B,OAAQZ,KAAKN,MAAMkB,gB,GA7DpBF,cAmEHmG,IChEKM,QACW,cAA7BxC,OAAOrE,SAAS8G,UAEe,UAA7BzC,OAAOrE,SAAS8G,UAEhBzC,OAAOrE,SAAS8G,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAACmE,GACLA,EAAaC,gBAEdjE,OAAM,SAACC,GACNhC,QAAQgC,MAAMA,EAAMiE,YE/G5BlB,M","file":"static/js/main.63881465.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    collapsed: true,\r\n  };\r\n\r\n  handleOnClickButton = () => {\r\n    this.setState((prevState) => ({ collapsed: !prevState.collapsed }));\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      <div className=\"summary\">\r\n        <ul>\r\n          <li className=\"event-summary\">{event.summary}</li>\r\n          <li className=\"event-date\">{event.start.dateTime}</li>\r\n          <li className=\"event-location\">{event.location}</li>\r\n        </ul>\r\n        <Button className=\"showMore\" onClick={this.handleOnClickButton}>\r\n          Show details\r\n        </Button>\r\n        {this.state.collapsed === false && (\r\n          <p className=\"event-description\">{event.description}</p>\r\n        )}\r\n        {this.state.collapsed === false && (\r\n          <Button\r\n            className=\"showLess\"\r\n            onClick={() => this.handleOnClickButton()}\r\n          >\r\n            Hide details\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event => \r\n          <li key={event.id} className=\"event\">\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: \"\",\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true })}}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n      numOfEvents: 32\r\n  }\r\n\r\n  handleNumberChanged = (event) => {\r\n      const value = event.target.value;\r\n      this.setState({\r\n          numOfEvents: value\r\n      });\r\n      this.props.updateEventCount(event.target.value);\r\n      }\r\n  \r\n  render() {\r\n      console.log(this.props);\r\n    return (\r\n        <div className=\"NumberOfEvents\">\r\n            <input type=\"number\" className=\"events-number\" value={this.state.numOfEvents} onChange={(event) => this.handleNumberChanged(event)}\r\n            />\r\n        </div>\r\n        );\r\n  }\r\n}\r\n   \r\n\r\nexport default NumberOfEvents;\r\n","const mockData = [\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181161784712000\"',\r\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:17:46.000Z\",\r\n    updated: \"2020-05-27T12:01:32.356Z\",\r\n    summary: \"Learn JavaScript\",\r\n    description:\r\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    location: \"London, UK\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-19T17:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181159875584000\"',\r\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:14:30.000Z\",\r\n    updated: \"2020-05-27T11:45:37.792Z\",\r\n    summary: \"React is Fun\",\r\n    description:\r\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    location: \"Berlin, Germany\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-20T15:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n];\r\n\r\n//mockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData };\r\n","/**\r\n * The following function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport { mockData } from './mock-data';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n  .then((res) => res.json())\r\n  .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `${'https://bdsyywwil7.execute-api.eu-central-1.amazonaws.com/dev/api/get-events'}/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n    }\r\n  };\r\n\r\n\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if(!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://bdsyywwil7.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl = window.location.protocol + \"//\" + \r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch( \r\n  `${'https://bdsyywwil7.execute-api.eu-central-1.amazonaws.com/dev/api/token'}/${encodeCode}`,)\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n  .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n  return access_token;\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from \"./api\";\nimport './nprogress.css';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numOfEvents: 32,\n    currentLocation: \"all\"\n  }\n  \n\n  \n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0, this.state.numOfEvents), \n          locations: extractLocations(events)\n        });\n      }      \n    });\n  }\n\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      const { numOfEvents } = this.state;\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, numOfEvents)\n        });\n      }\n        \n    });\n  }\n\n\n  updateEventCount = (eventCount) => {\n    const { currentLocation} = this.state;\n    this.setState({\n      numOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  };\n\n  \n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n\n   \n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numOfEvents={this.state.numOfEvents} updateEventCount={this.updateEventCount} />\n        <EventList events={this.state.events} />        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}